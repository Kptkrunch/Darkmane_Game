<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_didle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initilize variables

instance_create(x,y,obj_view);
instance_create(x,y,obj_globals);
instance_create(x,y,obj_music);
instance_create(x,y,obj_fade);

xaxis = 0;
yaxis = 0;

hp = global.hp;
maxhp = global.maxhp;
ex = global.ex;
exmax = global.exmax;
fey = global.fey;
maxfey = global.maxfey;

invincible = 0;



grav = .5;
spd = 0;
jspd = 17;
jumps = 0;
wjumps = 0;
hsp = 0;
vsp = 0;

ducking = false;
grounded = false;
attacking = false;
walljump = false;
lr = true;


wjmax= 2;
jmax = global.jumps;
dir = 1;
rwjumps = 0;
lwjumps = 0;
wjspd = 18;
pushoff = 25;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_alpha = 1)
{
    image_alpha = .3;
}
else
{
    image_alpha = 1;
}

if (invincible = 1)
{
alarm[1] = 3;
}
else
{
    image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///character controls

// controls
//------------------------------------------
r_key = keyboard_check(ord("D"));
r_key_held = keyboard_check(ord("D"));
l_key = keyboard_check(ord("A"));
l_key_held = keyboard_check(ord("A"));
j_key = keyboard_check_pressed(vk_up);
j_key_held = keyboard_check_pressed(vk_up);
d_key = keyboard_check(ord("S"));
a_key = keyboard_check(vk_down);


// when pressed do this...
//--------------------------------------------
if (!attacking)
{
if (r_key) &amp;&amp; (lr = true)
{
    if (grounded)
    {
    image_xscale = .5;
    hsp = 4.5;
    dir = 1;
    }
    else
    {
    image_xscale = .5;
    hsp = 4.5;
    dir = 1;
    }
}

if (l_key) &amp;&amp; (lr = true)
{
    if (grounded)
    {
    image_xscale = -.5;
    hsp = -4.5;
    dir = 0;
    }
    else
    {
    image_xscale = -.5;
    hsp = -4.5;
    dir = 0;
    }
}

// attacking animation
//---------------------


    
// ducking----------------------------------

if (keyboard_check(ord("S"))) &amp;&amp; (grounded = true)
    {
        ducking = true;
        lr = false;    
    }
    else
    {
        ducking = false;
        lr = true;
    }
    

// set to stop moving
//----------------------------------------------

if (!keyboard_check(ord("A")) &amp;&amp; !keyboard_check(ord("D")) || keyboard_check(ord("A")) &amp;&amp; keyboard_check(ord("D")))
{hsp = 0;}

// check to see if the character is on the ground
//-----------------------------------------------------------
if (place_meeting (x, y+1, par_wall)) 
{
jumps = global.jumps;
vsp = 0;
grounded = true;
    if(keyboard_check_pressed(vk_up) &amp;&amp; (jumps &gt; 0))
    {
        audio_play_sound(snd_jump1,1,false);
        jumps -= 1;
        vsp = -jspd;
    }        
}
else
{
grounded = false;
vsp += grav;
}

// variable jump heights

if (vsp &lt; 0) &amp;&amp; (!j_key_held) vsp = max(vsp,-jspd/2)

// double jump code
//------------------------------------------------------------------------
if (grounded = false) &amp;&amp; (jumps &gt; 0) &amp;&amp; (keyboard_check_pressed(vk_up))
{
    jumps -= 1;
    vsp = -jspd;  
}

//  wall jumping-------------------------------------------
// checks to the left or right for a wall to jump off of, then adds vsp

if (grounded = true) &amp;&amp; ((rwjumps == 0) || (lwjumps == 0)) &amp;&amp; (global.walljumping = true)
    {
    rwjumps += 1;
    lwjumps += 1;
    }
    rwjumps = clamp(rwjumps, 0, 1);
    lwjumps = clamp(lwjumps, 0, 1);
    
if (j_key) &amp;&amp; (place_meeting(x+1,y,par_wall)) &amp;&amp; (rwjumps &gt; 0)
{ 
    grounded = false;
    rwjumps -= 1;
    lwjumps += 1;
    rwjumps = clamp(rwjumps, 0, 1);
    lwjumps = clamp(lwjumps, 0, 1);
    vsp = -wjspd;
}

if (j_key) &amp;&amp; (place_meeting(x-1,y,par_wall)) &amp;&amp; (lwjumps &gt; 0)
{ 
    grounded = false;
    lwjumps -= 1;
    rwjumps += 1;
    lwjumps = clamp(lwjumps, 0, 1);
    rwjumps = clamp(rwjumps, 0, 1);
    vsp = -wjspd; 
}

// Colission checks
//----------------------------------------------------------
// horizontal collision
var hcollide;
hcollide = instance_place(x+hsp, y, par_wall);
if (hcollide != noone)
{
    if ((hcollide).type == 1)
//if(place_meeting(x+hsp, y, par_wall)) /////Original collision code
    {
    yplus = 0;
    while(place_meeting(x+hsp,y-yplus, par_wall) &amp;&amp; yplus &lt;= abs(1*hsp)) yplus +=1; // move up slopes
    if place_meeting(x+hsp, y-yplus, par_wall)
    {
    while(!place_meeting(x+sign(hsp),y,par_wall)) // tradition horizontal collision
    x += sign(hsp); 
    hsp = 0;
    }
    else
    {
        y -= yplus;
    }
}
}
// Carry through with the Horizontal movement (move horizontally)

x += hsp;

// Verticle collision
var vcollide;
vcollide = instance_place(x, y+vsp, par_wall);
if (vcollide != noone)
{
    if ((vcollide).type == 1)
//if (place_meeting(x, y+vsp, par_wall))  orignial verticle collision code
    {
        while(!place_meeting(x, y+sign(vsp), par_wall))
        { y += sign(vsp);}
        vsp = 0;
    }
    if (((vcollide).type == 2) &amp;&amp; sign(vsp) == 1)
    {
        while (!place_meeting(x,y+sign(vsp), par_wall)) y += 1;
        vsp = 0;
    }
}

// Carry through with the verticale movement (move vertically if any)

//set players Y postion
y += vsp;

// handling animations
//------------------------------------------------------------
//  play proper animation while on the ground

if (grounded)
{
    if(hsp != 0)
    {
    image_speed = .2;
    sprite_index = spr_dark;}
    else if(ducking)
    {sprite_index = spr_duck;}
    else
    {sprite_index = spr_didle}
}
// display proper animation while hes in the air
else
{
    if (ducking)
    {sprite_index = spr_duck;}
    else
    {sprite_index = spr_djump;}

}
// end attack animation trump
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking melee
if keyboard_check_pressed(vk_down)
{
audio_play_sound(snd_sword_swing,1,false);
sprite_index = spr_swing
image_speed = .7;
attacking = true

   
   with instance_create(x,y, obj_swing_hit)
   {
    image_xscale = obj_dark.image_xscale;
   }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// fey shot shooting

if keyboard_check_pressed(vk_right) &amp;&amp; (global.fey &gt;= 10) &amp;&amp; (global.feyalisshot = true)
{
        if (dir = 1)
        {
        image_speed = .1;
        feyshot = instance_create(x,y, obj_feyshot);
        feyshot.image_xscale = -1;
        feyshot.speed = 10;
        }
        else
        {
        image_speed = .1;
        feyshot = instance_create(x,y, obj_feyshot);
        feyshot.image_xscale = 1;
        feyshot.speed = -10;
        } 
        global.fey -= 10;   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// knife shooting shooting

if keyboard_check_pressed(vk_left) &amp;&amp; (global.ammo &gt; 0)
{
        if (dir = 1)
        {
        audio_play_sound(snd_knife_throw,1,false);
        global.ammo -= 1;
        knife = instance_create(x,y, obj_knife);
        knife.speed = 10;
        }
        else
        {
        audio_play_sound(snd_knife_throw,1,false);
        global.ammo -= 1;
        knife = instance_create(x,y, obj_knife);
        knife.speed = -10;
        }    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// controller script

scr_get_controller_input(0);

scr_move_axis(xaxis, yaxis, .25, 5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///health

if (global.hp &lt;=0)
{
game_restart();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spikes">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hp -= 1000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincible = 0)
{
    if ((18 - global.def) &gt;= 1)
{    
global.hp -= (18 - global.def);
invincible = 1;
alarm[0] = 60;
alarm[1] = 1;
}
else
{
    global.hp -= 1;
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_smart">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincible = 0)
{
    if ((15 - global.def) &gt;= 1)
{    
global.hp -= (15 - global.def);
invincible = 1;
alarm[0] = 60;
alarm[1] = 1;
}
else
{
    global.hp -= 1;
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_jump">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincible = 0)
{
    if ((12 - global.def) &gt;= 1)
{    
global.hp -= (12 - global.def);
invincible = 1;
alarm[0] = 60;
alarm[1] = 1;
}
else
{
    global.hp -= 1;
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_nofall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (invincible = 0)
{
    if ((8 - global.def) &gt;= 1)
{    
global.hp -= (8 - global.def);
invincible = 1;
alarm[0] = 60;
alarm[1] = 1;
}
else
{
    global.hp -= 1;
}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (attacking)
    attacking = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
